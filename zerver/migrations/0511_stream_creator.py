# Generated by Django 4.2.11 on 2024-04-05 06:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps
from django.db.models import F, OuterRef, Subquery


def backfill_creator_id_from_realm_audit_log(
    apps: StateApps, schema_editor: BaseDatabaseSchemaEditor
) -> None:
    RealmAuditLog = apps.get_model("zerver", "RealmAuditLog")
    RealmAuditLog.STREAM_CREATED = 601
    Stream = apps.get_model("zerver", "Stream")

    batch_size = 10000
    try:
        for id_start in range(
            RealmAuditLog.objects.earliest("id").id,
            RealmAuditLog.objects.latest("id").id + 1,
            batch_size,
        ):
            Stream.objects.annotate(
                new_creator=Subquery(
                    RealmAuditLog.objects.filter(
                        id__range=(id_start, id_start + batch_size - 1),
                        event_type=RealmAuditLog.STREAM_CREATED,
                        acting_user__isnull=False,
                        modified_stream=OuterRef("pk"),
                    ).values("acting_user")
                )
            ).filter(creator=None, new_creator__isnull=False).update(creator=F("new_creator"))
    except RealmAuditLog.DoesNotExist:
        pass


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ("zerver", "0510_add_realmauditlog_realm_event_type_index"),
    ]

    operations = [
        migrations.AddField(
            model_name="stream",
            name="creator",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.RunPython(
            backfill_creator_id_from_realm_audit_log,
            reverse_code=migrations.RunPython.noop,
            elidable=True,
        ),
    ]
